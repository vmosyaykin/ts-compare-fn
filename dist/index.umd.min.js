/*!
 * ts-compare-fn v1.0.2
 * (c) Vladimir Mosyaykin
 * Released under the MIT License.
 */
!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports):"function"==typeof define&&define.amd?define(["exports"],o):o((t="undefined"!=typeof globalThis?globalThis:t||self).tsCompareFn={})}(this,(function(t){"use strict";function o(t){return!t.startsWith("-")}function e(t){return"function"==typeof t}function n(t){return"object"==typeof t&&"path"in t}function r(t){return"object"==typeof t&&"get"in t}function i(t){return"object"==typeof t&&!("path"in t)}function f(t,o){const e=o.split(".");let n=t;for(const t of e){if("object"!=typeof n||null===n)throw new Error(`Invalid path: ${o}`);n=n[t]}return n}t.compareFn=function(...t){let l=t[t.length-1];l&&i(l)||(l={});const a={...l&&i(l)?l:{},collator:l.collator??new Intl.Collator(l.locale??"en-u-co-eor-kn")},c=[];for(const i of t){if("string"==typeof i){const t=o(i);c.push({dir:t?1:-1,path:t?i:i.substring(1),...a})}if(e(i)&&c.push({dir:1,get:i,...a}),n(i)){const t=o(i.path);i.locale&&!i.collator&&(i.collator=new Intl.Collator(i.locale)),c.push({dir:"desc"===i.order||-1===i.order?-1:t?1:-1,...a,...i,path:t?i.path:i.path.substring(1)})}r(i)&&(i.locale&&!i.collator&&(i.collator=new Intl.Collator(i.locale)),c.push({dir:"desc"===i.order||-1===i.order?-1:1,...a,...i}))}return(t,o)=>{for(const e of c){const{dir:n,path:r,collator:i,defaultValue:l,get:a}=e;let c,u;if(r&&(c=f(t,r),u=f(o,r)),a&&(c=a(t),u=a(o)),null===c&&(c=void 0),null===u&&(u=void 0),Object.is(c,u))continue;if(typeof c!=typeof u&&c instanceof Date!=u instanceof Date&&void 0!==c&&void 0!==u)throw new Error(`Cannot compare ${typeof c} and ${typeof u}`);const s=c instanceof Date||u instanceof Date;if(null!=l&&(c?typeof c:typeof u)===typeof l&&s===l instanceof Date&&(c=c??l,u=u??l),void 0===c)return n;if(void 0===u)return-n;if("number"==typeof c&&"number"==typeof u||"bigint"==typeof c&&"bigint"==typeof u||c instanceof Date&&u instanceof Date){if(Number.isNaN(c))return n;if(Number.isNaN(u))return-n;if(c>u)return n;if(c<u)return-n}else if("string"!=typeof c||"string"!=typeof u){if("boolean"==typeof c&&"boolean"==typeof u)return c?n:-n}else{const t=i.compare(c,u);if(t)return n*t}}return 0}}}));
//# sourceMappingURL=index.umd.min.js.map
