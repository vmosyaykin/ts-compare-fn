{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["type SortConfig<Type extends object> =\n    | SortOption<Type>\n    | SortPathConfig<Type>\n    | Getter<Type>\n    | SortGetterConfig<Type>;\n\ntype LocaleOptions = {\n    locale?: string;\n    collator?: Collator;\n};\n\ntype SortPathConfig<Type extends object> = {\n    [Path in SortablePath<Type>]: {\n        path: Path | `-${Path}`;\n        order?: 'asc' | 'desc' | -1 | 1;\n        defaultValue?: TypeAtPath<Type, Path>;\n    } & LocaleOptions;\n}[SortablePath<Type>];\n\ntype SortGetterConfig<Type extends object> = {\n    get: Getter<Type>;\n    order?: 'asc' | 'desc' | -1 | 1;\n} & LocaleOptions;\n\ntype SortOptionAndLocaleOptionsTuple<Type extends object> = {\n    [Path in SortablePath<Type>]: [\n        Path | `-${Path}`,\n        LocaleOptions & { defaultValue?: TypeAtPath<Type, Path> },\n    ];\n}[SortablePath<Type>];\n\nexport function compareFn<Type extends object>(\n    ...params: SortOptionAndLocaleOptionsTuple<Type>\n): (a: Type, b: Type) => number;\nexport function compareFn<Type extends object>(\n    ...params: [\n        SortConfig<Type>,\n        SortConfig<Type>,\n        ...SortConfig<Type>[],\n        LocaleOptions,\n    ]\n): (a: Type, b: Type) => number;\nexport function compareFn<Type extends object>(\n    ...params: [SortConfig<Type>, ...SortConfig<Type>[]]\n): (a: Type, b: Type) => number;\nexport function compareFn<Type extends object>(\n    ...params: (SortConfig<Type> | LocaleOptions)[]\n): (a: Type, b: Type) => number {\n    const defaultLocale = 'en-u-co-eor-kn';\n\n    let options = params[params.length - 1];\n\n    if (!options || !isLocaleOptions(options)) {\n        options = {};\n    }\n\n    const resolvedOptions = {\n        ...(options && isLocaleOptions(options) ? options : {}),\n        collator:\n            options.collator ??\n            new Intl.Collator(options.locale ?? defaultLocale),\n    };\n\n    const comparators: Comparator<Type>[] = [];\n\n    for (const param of params) {\n        if (isSortOption(param)) {\n            const isAscPath = isAscOption(param);\n\n            comparators.push({\n                dir: isAscPath ? 1 : -1,\n                path: isAscPath\n                    ? param\n                    : (param.substring(1) as AscOption<Type>),\n                ...resolvedOptions,\n            });\n        }\n\n        if (isGetter(param)) {\n            comparators.push({\n                dir: 1,\n                get: param,\n                ...resolvedOptions,\n            });\n        }\n\n        if (isSortPathConfig(param)) {\n            const isAscPath = isAscOption(param.path);\n\n            if (param.locale && !param.collator) {\n                param.collator = new Intl.Collator(param.locale);\n            }\n\n            comparators.push({\n                dir:\n                    param.order === 'desc' || param.order === -1\n                        ? -1\n                        : isAscPath\n                          ? 1\n                          : -1,\n                ...resolvedOptions,\n                ...param,\n                path: (isAscPath\n                    ? param.path\n                    : param.path.substring(1)) as AscOption<Type>,\n            });\n        }\n\n        if (isSortGetterConfig(param)) {\n            if (param.locale && !param.collator) {\n                param.collator = new Intl.Collator(param.locale);\n            }\n\n            comparators.push({\n                dir: param.order === 'desc' || param.order === -1 ? -1 : 1,\n                ...resolvedOptions,\n                ...param,\n            });\n        }\n    }\n\n    return (aObject, bObject) => {\n        for (const comparator of comparators) {\n            const { dir, path, collator, defaultValue, get } = comparator;\n\n            let a, b;\n\n            if (path) {\n                a = getByPath(aObject, path);\n                b = getByPath(bObject, path);\n            }\n\n            if (get) {\n                a = get(aObject);\n                b = get(bObject);\n            }\n\n            if (a === null) a = undefined;\n            if (b === null) b = undefined;\n\n            if (Object.is(a, b)) continue;\n\n            if (\n                typeof a !== typeof b &&\n                a instanceof Date !== b instanceof Date &&\n                a !== undefined &&\n                b !== undefined\n            ) {\n                throw new Error(`Cannot compare ${typeof a} and ${typeof b}`);\n            }\n\n            const type = a ? typeof a : typeof b;\n            const instanceOfDate = a instanceof Date || b instanceof Date;\n\n            if (\n                defaultValue !== undefined &&\n                defaultValue !== null &&\n                type === typeof defaultValue &&\n                instanceOfDate === defaultValue instanceof Date\n            ) {\n                a = a ?? defaultValue;\n                b = b ?? defaultValue;\n            }\n\n            if (a === undefined) return dir;\n            if (b === undefined) return -dir;\n\n            if (\n                (typeof a === 'number' && typeof b === 'number') ||\n                (typeof a === 'bigint' && typeof b === 'bigint') ||\n                (a instanceof Date && b instanceof Date)\n            ) {\n                if (Number.isNaN(a)) return dir;\n                if (Number.isNaN(b)) return -dir;\n\n                if (a > b) return dir;\n                if (a < b) return -dir;\n\n                continue;\n            }\n\n            if (typeof a === 'string' && typeof b === 'string') {\n                const compareResult = collator.compare(a, b);\n                if (compareResult) return dir * compareResult;\n\n                continue;\n            }\n\n            if (typeof a === 'boolean' && typeof b === 'boolean') {\n                return a ? dir : -dir;\n            }\n        }\n\n        return 0;\n    };\n}\n\ntype NoSpecialChars<Key extends string | undefined> = Key extends\n    | `-${string}`\n    | `${string}.${string}`\n    ? never\n    : `${Key}`;\n\ntype Path<Object, Leaf, Index extends string = string> = Object extends object\n    ? {\n          [Key in keyof Required<Object>]: Key extends Index\n              ? Required<Object>[Key] extends Leaf\n                  ? NoSpecialChars<Key>\n                  : Required<Object>[Key] extends unknown[]\n                    ? `${Key}.${Path<Required<Object>[Key], Leaf, TupleIndex<Required<Object>[Key]>> | 'length'}`\n                    : Required<Object>[Key] extends object\n                      ? `${Key}.${Path<Required<Object>[Key], Leaf>}`\n                      : never\n              : never;\n      }[keyof Required<Object> & Index]\n    : never;\n\ntype TupleIndex<Tuple extends unknown[]> = Exclude<\n    keyof Tuple,\n    keyof unknown[]\n> &\n    string;\n\ntype Nullishable<Type> = Type | null | undefined;\ntype SortablePath<Type> =\n    | Path<Type, Nullishable<number>>\n    | Path<Type, Nullishable<bigint>>\n    | Path<Type, Nullishable<Date>>\n    | Path<Type, Nullishable<string>>\n    | Path<Type, Nullishable<boolean>>;\n\ntype TypeAtPath<\n    Object,\n    Path extends string,\n> = Path extends `${infer Key}.${infer Rest}`\n    ? Key extends keyof Object\n        ? TypeAtPath<Object[Key], Rest>\n        : never\n    : Path extends keyof Object\n      ? Object[Path]\n      : never;\n\ntype AscOption<Type> = SortablePath<Type>;\ntype DescOption<Type> = `-${SortablePath<Type>}`;\ntype SortOption<Type> = AscOption<Type> | DescOption<Type>;\n\ntype Getter<Type extends object> =\n    | ((object: Type) => Nullishable<number>)\n    | ((object: Type) => Nullishable<bigint>)\n    | ((object: Type) => Nullishable<Date>)\n    | ((object: Type) => Nullishable<string>)\n    | ((object: Type) => Nullishable<boolean>);\n\nfunction isAscOption<Type>(\n    sortPath: SortOption<Type>\n): sortPath is AscOption<Type> {\n    return !sortPath.startsWith('-');\n}\n\nfunction isSortOption<Type extends object>(\n    sort: SortConfig<Type> | LocaleOptions\n): sort is SortOption<Type> {\n    return typeof sort === 'string';\n}\n\nfunction isGetter<Type extends object>(\n    sort: SortConfig<Type> | LocaleOptions\n): sort is Getter<Type> {\n    return typeof sort === 'function';\n}\n\nfunction isSortPathConfig<Type extends object>(\n    sort: SortConfig<Type> | LocaleOptions\n): sort is SortPathConfig<Type> {\n    return typeof sort === 'object' && 'path' in sort;\n}\n\nfunction isSortGetterConfig<Type extends object>(\n    sort: SortConfig<Type> | LocaleOptions\n): sort is SortGetterConfig<Type> {\n    return typeof sort === 'object' && 'get' in sort;\n}\n\nfunction isLocaleOptions<Type extends object>(\n    sort: SortConfig<Type> | LocaleOptions\n): sort is LocaleOptions {\n    return typeof sort === 'object' && !('path' in sort);\n}\n\ntype Sortable = string | number | bigint | boolean | Date | null | undefined;\n\ntype Collator = { compare: (x: string, y: string) => number };\ntype Comparator<Type extends object> = {\n    dir: 1 | -1;\n    path?: SortablePath<Type> | undefined;\n    get?: (object: Type) => Sortable | undefined;\n    collator: Collator;\n    defaultValue?: unknown;\n} & LocaleOptions;\n\nfunction getByPath<Type extends object>(obj: Type, path: SortablePath<Type>) {\n    const parts = path.split('.');\n\n    let result: unknown = obj;\n\n    for (const part of parts) {\n        if (typeof result !== 'object' || result === null) {\n            throw new Error(`Invalid path: ${path}`);\n        }\n\n        result = result[part as keyof object];\n    }\n\n    return result as Sortable;\n}\n"],"names":[],"mappings":"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"}